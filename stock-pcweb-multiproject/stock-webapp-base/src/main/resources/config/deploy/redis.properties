# Redis settings  
# server IP
#redis.host=47.92.39.161
redis.host=127.0.0.1
# server port
redis.port=6379   
# use dbIndex
redis.database=10
# password 123456
redis.password=
#\u6700\u5927\u5206\u914d\u7684\u8fde\u63a5\u6570
redis.pool.maxTotal=1024  
#\u6700\u5927\u7a7a\u95f2\u8fde\u63a5\u6570
redis.pool.maxIdle=200
#\u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5\u6570
redis.pool.minIdle=10
#---------------------------------------------------------------------------------
#\u662f\u5426\u542f\u7528\u540e\u8fdb\u5148\u51fa, \u9ed8\u8ba4true
redis.pool.lifo=true
#\u7b49\u5f85\u7ebf\u7a0b\u62ff\u7a7a\u95f2\u8fde\u63a5\u7684\u65b9\u5f0f\uff08true\uff1a\u76f8\u5f53\u4e8e\u7b49\u5f85\u7ebf\u7a0b\u662f\u5728\u5148\u8fdb\u5148\u51fa\u53bb\u62ff\u7a7a\u95f2\u8fde\u63a5\uff09\u9ed8\u8ba4\u4e3afalse
redis.pool.fairness=false
#//\u83b7\u53d6\u8fde\u63a5\u65f6\u7684\u6700\u5927\u7b49\u5f85\u6beb\u79d2\u6570(\u5982\u679c\u8bbe\u7f6e\u4e3a\u963b\u585e\u65f6BlockWhenExhausted),\u5982\u679c\u8d85\u65f6\u5c31\u629b\u5f02\u5e38, \u5c0f\u4e8e\u96f6:\u963b\u585e\u4e0d\u786e\u5b9a\u7684\u65f6\u95f4,  \u9ed8\u8ba4-1
redis.pool.maxWaitMillis=-1
#
redis.pool.testOnCreate=false
#\u5411\u8c03\u7528\u8005\u8f93\u51fa\u201c\u94fe\u63a5\u201d\u8d44\u6e90\u65f6\uff0c\u662f\u5426\u68c0\u6d4b\u662f\u6709\u6709\u6548\uff0c\u5982\u679c\u65e0\u6548\u5219\u4ece\u8fde\u63a5\u6c60\u4e2d\u79fb\u9664\uff0c\u5e76\u5c1d\u8bd5\u83b7\u53d6\u7ee7\u7eed\u83b7\u53d6\u3002\u9ed8\u8ba4\u4e3afalse\u3002\u5efa\u8bae\u4fdd\u6301\u9ed8\u8ba4\u503c.
#获取连接之前，是否测试连接可用，默认是false。网络不稳定的情况，可以采用true,如果测试不通过，从pool中移除，并再次执行获取连接。
redis.pool.testOnBorrow=false
#返回连接时，是否测试连接可用，默认是false。
redis.pool.testOnReturn=false
#//\u5411\u8c03\u7528\u8005\u8f93\u51fa\u201c\u94fe\u63a5\u201d\u5bf9\u8c61\u65f6\uff0c\u662f\u5426\u68c0\u6d4b\u5b83\u7684\u7a7a\u95f2\u8d85\u65f6\uff1b\u9ed8\u8ba4\u4e3afalse\u3002\u5982\u679c\u201c\u94fe\u63a5\u201d\u7a7a\u95f2\u8d85\u65f6\uff0c\u5c06\u4f1a\u88ab\u79fb\u9664\uff1b\u5efa\u8bae\u4fdd\u6301\u9ed8\u8ba4\u503c\u3002\u9ed8\u8ba4\u503cfalse
redis.pool.testWhileIdle=false

#连接空闲的最小时间
redis.minEvictableIdleTimeMillis=300000  
#对于“空闲链接”检测线程而言 每次检测的链接资源的个数
redis.numTestsPerEvictionRun=3  
#空闲链接”检测线程，检测的周期，毫秒数。如果为负值，表示不运行“检测线程”。默认为-1
redis.timeBetweenEvictionRunsMillis=60000